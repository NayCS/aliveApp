{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\nayel\\\\Desktop\\\\aliveApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\nayel\\\\Desktop\\\\aliveApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\nayel\\\\Desktop\\\\aliveApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\nayel\\\\Desktop\\\\aliveApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\nayel\\\\Desktop\\\\aliveApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\nayel\\\\Desktop\\\\aliveApp\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\nayel\\\\Desktop\\\\aliveApp\\\\client\\\\src\\\\pages\\\\Blood.js\";\nimport React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\"; //import { Col, Row, Container } from \"../components/Grid\";\n//import { List, ListItem } from \"../components/List\";\n\nimport { Input, FormBtn } from \"../components/Form\";\n\nvar Blood =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Blood, _Component);\n\n  function Blood() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Blood);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Blood)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      blood: [],\n      glucose: \"\",\n      ketone: \"\"\n    };\n\n    _this.loadBlood = function () {\n      API.getBloods().then(function (res) {\n        return _this.setState({\n          blood: res.data,\n          glucose: \"\",\n          ketone: \"\"\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.deleteBlood = function (id) {\n      API.deleteBlood(id).then(function (res) {\n        return _this.loadBlood();\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.handleInputChange = function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n\n      if (_this.state.glucose && _this.state.ketone) {\n        API.saveBlood({\n          glucose: _this.state.glucose,\n          ketone: _this.state.ketone\n        }).then(function (res) {\n          return _this.loadBlood();\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Blood, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadBlood();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Track your Glucose Ketone Index\")), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.glucose,\n        onChange: this.handleInputChange,\n        name: \"glucose\",\n        placeholder: \"Glucose (Required in (mg/dL))\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(Input, {\n        value: this.state.ketone,\n        onChange: this.handleInputChange,\n        name: \"ketone\",\n        placeholder: \"Ketones (Required in (mmol/L))\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(FormBtn, {\n        disabled: !(this.state.glucose && this.state.ketone),\n        onClick: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Get your GKI\"))), React.createElement(Col, {\n        size: \"md-6 sm12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"My Blood Metrics\")), this.state.blood.length ? React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.blood.map(function (blood) {\n        return React.createElement(ListItem, {\n          key: blood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"../bloods/\" + blood._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, blood.glucose, \" and \", blood.ketone)), React.createElement(DeleteBtn, {\n          onClick: function onClick() {\n            return _this2.deleteBlood(blood._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }));\n      })) : React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"No resutls to Display\"))));\n    }\n  }]);\n\n  return Blood;\n}(Component);\n\nexport default Blood;","map":{"version":3,"sources":["C:/Users/nayel/Desktop/aliveApp/client/src/pages/Blood.js"],"names":["React","Component","DeleteBtn","Jumbotron","API","Link","Input","FormBtn","Blood","state","blood","glucose","ketone","loadBlood","getBloods","then","res","setState","data","catch","err","console","log","deleteBlood","id","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","saveBlood","length","map","_id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport DeleteBtn from \"../components/DeleteBtn\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\n//import { Col, Row, Container } from \"../components/Grid\";\r\n//import { List, ListItem } from \"../components/List\";\r\nimport { Input, FormBtn } from \"../components/Form\";\r\n\r\nclass Blood extends Component {\r\n    state = {\r\n        blood: [],\r\n        glucose: \"\",\r\n        ketone: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadBlood();\r\n    }\r\n\r\n    loadBlood = () => {\r\n        API.getBloods()\r\n            .then(res =>\r\n                this.setState({\r\n                    blood: res.data,\r\n                    glucose: \"\",\r\n                    ketone: \"\"\r\n\r\n                })\r\n            )\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    deleteBlood = id => {\r\n        API.deleteBlood(id)\r\n            .then(res => this.loadBlood())\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        if (this.state.glucose && this.state.ketone) {\r\n            API.saveBlood({\r\n                glucose: this.state.glucose,\r\n                ketone: this.state.ketone\r\n            })\r\n                .then(res => this.loadBlood())\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col size=\"md-6\">\r\n                        <Jumbotron>\r\n                            <h1>Track your Glucose Ketone Index</h1>\r\n                        </Jumbotron>\r\n                        <form>\r\n                            <Input\r\n                                value={this.state.glucose}\r\n                                onChange={this.handleInputChange}\r\n                                name=\"glucose\"\r\n                                placeholder=\"Glucose (Required in (mg/dL))\"\r\n                            />\r\n                            <Input\r\n                                value={this.state.ketone}\r\n                                onChange={this.handleInputChange}\r\n                                name=\"ketone\"\r\n                                placeholder=\"Ketones (Required in (mmol/L))\"\r\n                            />\r\n\r\n                            <FormBtn\r\n                                disabled={!(this.state.glucose && this.state.ketone)}\r\n                                onClick={this.handleFormSubmit}\r\n                            >\r\n                                Get your GKI\r\n                  </FormBtn>\r\n                        </form>\r\n                    </Col>\r\n                    <Col size=\"md-6 sm12\">\r\n                        <Jumbotron>\r\n                            <h1>My Blood Metrics</h1>\r\n                        </Jumbotron>\r\n                        {this.state.blood.length ? (\r\n                            <List>\r\n                                {this.state.blood.map(blood => (\r\n                                    <ListItem key={blood._id}>\r\n                                        <Link to={\"../bloods/\" + blood._id}>\r\n                                            <strong>\r\n                                                {blood.glucose} and {blood.ketone}\r\n                                            </strong>\r\n                                        </Link>\r\n                                        <DeleteBtn onClick={() => this.deleteBlood(blood._id)} />\r\n                                    </ListItem>\r\n                                ))}\r\n\r\n                            </List>\r\n                        ) : (\r\n                                <h3>No resutls to Display</h3>\r\n                            )\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Blood;\r\n\r\n"]},"metadata":{},"sourceType":"module"}