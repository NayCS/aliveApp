{"version":3,"sources":["components/DeleteBtn/index.js","components/Jumbotron/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/Form/index.js","pages/Blood.js","pages/Detail.js","pages/NoCalculationMade.js","components/Nav/index.js","App.js","index.js"],"names":["DeleteBtn","props","react_default","a","createElement","Object","assign","className","role","tabIndex","Jumbotron","_ref","children","style","height","clear","paddingTop","textAlign","API","getBloods","axios","get","getBlood","id","deleteBlood","delete","saveBlood","bloodData","post","Container","fluid","concat","Row","_ref2","Col","_ref3","size","split","map","join","List","ListItem","Input","FormBtn","float","marginBottom","Blood","state","blood","glucose","ketone","loadBlood","then","res","_this","setState","data","catch","err","console","log","handleInputChange","event","_event$target","target","name","value","defineProperty","handleFormSubmit","preventDefault","this","_this2","components_Jumbotron","onChange","placeholder","disabled","onClick","length","key","_id","Link","to","components_DeleteBtn","Component","Detail","PaymentResponse","match","params","NoCalculationMade","aria-label","Nav","href","App","BrowserRouter","components_Nav","Switch","Route","exact","path","component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.70c969c7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import axios from \"axios\";\n\nexport default {\n\n    //Get all blood data\n    getBloods: function () {\n        return axios.get(\"/api/bloods\");\n    },\n\n    //Gets the blood data with a given ID\n    getBlood: function (id) {\n        return axios.get(\"/api/bloods/\" + id);\n    },\n\n    //Delete the blood data with the given id\n    deleteBlood: function (id) {\n        return axios.delete(\"/api/bloods/\" + id);\n    },\n\n    //Saves the blood data in the database\n    saveBlood: function (bloodData) {\n        return axios.post(\"/api/bloods/\", bloodData);\n    }\n\n};","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { Component } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\"; import { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, FormBtn } from \"../components/Form\";\n\nclass Blood extends Component {\n    state = {\n        blood: [],\n        glucose: \"\",\n        ketone: \"\"\n    };\n\n    componentDidMount() {\n        this.loadBlood();\n    }\n\n    loadBlood = () => {\n        API.getBloods()\n            .then(res =>\n                this.setState({\n                    blood: res.data,\n                    glucose: \"\",\n                    ketone: \"\"\n\n                })\n            )\n            .catch(err => console.log(err));\n    };\n\n    deleteBlood = id => {\n        API.deleteBlood(id)\n            .then(res => this.loadBlood())\n            .catch(err => console.log(err));\n    };\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        if (this.state.glucose && this.state.ketone) {\n            API.saveBlood({\n                glucose: this.state.glucose,\n                ketone: this.state.ketone\n            })\n                .then(res => this.loadBlood())\n                .catch(err => console.log(err));\n        }\n    }\n\n\n\n    render() {\n        return (\n            <Container fluid>\n                <Row>\n                    <Col size=\"md-6\">\n                        <Jumbotron>\n                            <h1>Track your Glucose Ketone Index</h1>\n                        </Jumbotron>\n                        <form>\n                            <Input\n                                value={this.state.glucose}\n                                onChange={this.handleInputChange}\n                                name=\"glucose\"\n                                placeholder=\"Glucose (Required in (mg/dL))\"\n                            />\n                            <Input\n                                value={this.state.ketone}\n                                onChange={this.handleInputChange}\n                                name=\"ketone\"\n                                placeholder=\"Ketones (Required in (mmol/L))\"\n                            />\n\n                            <FormBtn\n                                disabled={!(this.state.glucose && this.state.ketone)}\n                                onClick={this.handleFormSubmit}\n                            >\n                                Get your GKI\n                  </FormBtn>\n                        </form>\n                    </Col>\n\n                    <Col size=\"md-6 sm12\">\n                        <Jumbotron>\n                            <h1>Your Blood Metrics</h1>\n                        </Jumbotron>\n                        {this.state.blood.length ? (\n                            <List>\n                                {this.state.blood.map(blood => (\n                                    <ListItem key={blood._id}>\n                                        <Link to={\"../bloods/\" + blood._id}>\n                                            <strong>\n                                                {(blood.glucose / 18.2) / (blood.ketone)}\n                                            </strong>\n                                        </Link>\n                                        <DeleteBtn onClick={() => this.deleteBlood(blood._id)} />\n                                    </ListItem>\n                                ))}\n\n                            </List>\n                        ) : (\n                                <h3>No resutls to Display</h3>\n                            )\n                        }\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\n\nexport default Blood;\n\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n\nclass Detail extends Component {\n    state = {\n        blood: {}\n    };\n\n    // When this component mounts, grab the blood with the _id of this.props.match.params.\n    // e.g. localhost:3002/blood/599dcb67f0f16317844583fc\n\n    componentDidMount() {\n        API.getBlood(this.PaymentResponse.match.params.id)\n            .then(res => this.setState({ blood: res.data }))\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n            <Container fluid>\n                <Row>\n                    <Col size=\"md-12\">\n                        <Jumbotron>\n                            <h1>\n                                {this.state.blood.glucose}\n                            </h1>\n                            <br></br>\n                            <h1>\n                                {this.state.blood.ketone}\n                            </h1>\n                        </Jumbotron>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col size=\"md-2\">\n                        <Link to=\"/\">← Back to Main Page</Link>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Detail;","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoCalculationMade() {\n    return (\n        <Container fluid>\n            <Row>\n                <Col size=\"md-12\">\n                    <Jumbotron>\n                        <h1>404 Page Not Found</h1>\n                        <h1>\n                            <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                                🙄\n              </span>\n                        </h1>\n                    </Jumbotron>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default NoCalculationMade;\n","import React from \"react\";\n\nfunction Nav() {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n            <a className=\"navbar-brand\" href=\"/\">\n                Therapeutic Keto\n      </a>\n        </nav>\n    );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Blood from \"./pages/Blood\";\nimport Detail from \"./pages/Detail\";\n//import Login from \"../pages/login\";\nimport NoCalculationMade from \"./pages/NoCalculationMade\";\n\n//import logo from './logo.svg';\n//import './App.css';\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        <Switch>\n          <Route exact path=\"/\" component={Blood} />\n          <Route exact path=\"/bloods\" component={Blood} />\n          <Route exact path=\"/bloods/:id\" component={Detail} />\n          <Route component={NoCalculationMade} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n\n//serviceWorker.unregister();\n\n\n\n\n\n"],"sourceRoot":""}